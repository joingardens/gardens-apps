# Caprover schema version
captainVersion: 4

# Parameters of the Caprover one-click app

caproverOneClickApp:

    # Title and description for one-click app gallery

    displayName: Chatwoot
    description: Community & Support, Live chat - Chatwoot is an open-source live-chat and omnichannel support center.
    
    # Only mark true if the docker-compose is the official one provided by the app developer, or if it's from a trusted source

    isOfficial: true

    # Onboarding instructions

    instructions:

        # Configuration page (user sets variables here)

        start: |-
            
            ![Chatwoot Logo](https://nbygyyaygsxxesvjjcwa.supabase.co/storage/v1/object/public/public/chatwoot%20logo.svg?t=2022-08-17T19%3A08%3A19.749Z)
            

            🌐 [Chatwoot website](https://www.chatwoot.com/)
            📘 [Help & docs](https://www.chatwoot.com/help-center/)
            💻 [Source code](https://github.com/chatwoot/chatwoot)

            **Chatwoot** is an open-source live-chat and omnichannel support center.
            This is a copy of the official Caprover image.
            Enter your Chatwoot configuration parameters and click on next. The app will be deployed for you.  It will take about 1-2 minutes for the process to finish.
        
        # Success page

        end: >-
            ✨✨ **Chatwoot is deployed successfully**. 
            Wait for a couple minutes for it to set up, then access at [http://$$cap_appname.$$cap_root_domain](http://$$cap_appname.$$cap_root_domain) and enjoy! 
            IMPORTANT: It will take up to 2 minutes for Chatwoot to be ready. Before that, you might see a 502 error page.
            Check out the full list of environment variables [here](https://www.chatwoot.com/docs/environment-variables/).
            
    # Link to app's documentation and Docker Hub

    documentation: Access docs at https://www.chatwoot.com/help-center/ .

    # Variables to be configured by the user

    variables:
        - id: $$cap_chatwoot_version
          label: Chatwoot Version Tag
          description: Choose the latest version from https://hub.docker.com/r/chatwoot/chatwoot/tags
          defaultValue: v2.7.0
        - id: $$cap_chatwoot_secret_key_base
          label: Chatwoot Secret Key Base
          description: The randomized string which is used to verify the integrity of signed cookies. Please use a string with more than 26 characters
          validRegex: /^[^\@]{26,}$/
        - id: $$cap_chatwoot_postgres_password
          label: Postgres Password
          description: Password must be at least 12 characters.  Please use a random string.
          validRegex: /^[^\@]{12,}$/
        - id: $$cap_chatwoot_redis_password
          label: Redis Password
          description: Password must be at least 12 characters. Please use a random string.
          validRegex: /^[^\@]{12,}$/
    
# Docker-compose definition

services:
    $$cap_appname-postgres:
        image: postgres:12
        volumes:
            - $$cap_appname-postgres-data:/var/lib/postgresql/data
        restart: always
        environment:
            POSTGRES_USER: chatwoot
            POSTGRES_PASSWORD: $$cap_chatwoot_postgres_password
            POSTGRES_DB: chatwoot
        caproverExtra:
            notExposeAsWebApp: 'true'
    $$cap_appname-redis:
        volumes:
            - $$cap_appname-redis-data:/data
        restart: always
        environment:
            REDIS_PASSWORD: $$cap_chatwoot_redis_password
        caproverExtra:
            dockerfileLines:
                - FROM redis:alpine
                - CMD exec redis-server --requirepass "$$cap_chatwoot_redis_password"
            notExposeAsWebApp: 'true'
    $$cap_appname-web:
        restart: always
        environment:
            RAILS_ENV: production
            RAILS_LOG_TO_STDOUT: 'true'
            SECRET_KEY_BASE: $$cap_chatwoot_secret_key_base
            POSTGRES_HOST: srv-captain--$$cap_appname-postgres
            POSTGRES_DATABASE: chatwoot
            POSTGRES_USERNAME: chatwoot
            POSTGRES_PASSWORD: $$cap_chatwoot_postgres_password
            REDIS_URL: redis://srv-captain--$$cap_appname-redis:6379
            REDIS_PASSWORD: $$cap_chatwoot_redis_password
            INSTALLATION_ENV: caprover
        caproverExtra:
            containerHttpPort: '3000'
            dockerfileLines:
                - FROM chatwoot/chatwoot:$$cap_chatwoot_version
                - RUN chmod +x docker/entrypoints/rails.sh
                - ENTRYPOINT ["docker/entrypoints/rails.sh"]
                - EXPOSE 3000
                - CMD bundle exec rails db:chatwoot_prepare; bundle exec rails s -b 0.0.0.0 -p 3000
    $$cap_appname-worker:
        restart: always
        environment:
            RAILS_ENV: production
            RAILS_LOG_TO_STDOUT: 'true'
            SECRET_KEY_BASE: $$cap_chatwoot_secret_key_base
            POSTGRES_HOST: srv-captain--$$cap_appname-postgres
            POSTGRES_DATABASE: chatwoot
            POSTGRES_USERNAME: chatwoot
            POSTGRES_PASSWORD: $$cap_chatwoot_postgres_password
            REDIS_URL: redis://srv-captain--$$cap_appname-redis:6379
            REDIS_PASSWORD: $$cap_chatwoot_redis_password
            INSTALLATION_ENV: caprover
        caproverExtra:
            dockerfileLines:
                - FROM chatwoot/chatwoot:$$cap_chatwoot_version
                - RUN chmod +x docker/entrypoints/rails.sh
                - ENTRYPOINT ["docker/entrypoints/rails.sh"]
                - CMD bundle exec sidekiq -C config/sidekiq.yml
            notExposeAsWebApp: 'true'